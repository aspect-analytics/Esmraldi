:mod:`complete_analysis`
========================

.. py:module:: complete_analysis

.. autoapi-nested-parse::

   Gives a complete analysis of the
   selected peaks and their annotation
   Helps finding correspondences between different
   samples

   Generates a summary file (.xls)

   ..
       !! processed by numpydoc !!



Module Contents
---------------


.. function:: get_col_widths(data)

   Compute the maximum column width
   (in number of characters)


   :Parameters:

       **data: np.ndarray**
           input data

   :Returns:

       int
           max width













   ..
       !! processed by numpydoc !!


.. function:: split_name(name)

   Split the species name
   to a readable format

   Example:
   Mol_Adduct_Modif is converted to:
   Mol Modif (Adduct)

   :Parameters:

       **name: str**
           input name

   :Returns:

       str
           split name













   ..
       !! processed by numpydoc !!


.. function:: dict_to_array(masses)

   Converts a mz/name dict
   to a numpy array


   :Parameters:

       **masses: dict**
           annotated species dictionary

   :Returns:

       np.ndarray
           annotated species array













   ..
       !! processed by numpydoc !!


.. function:: write_mass_list(worksheet, column_names, masses, mean_spectrum)

   Write annotated mass list to a spreadsheet


   :Parameters:

       **worksheet: xlsxwriter.Worksheet**
           current worksheet

       **column_names: list**
           column header names

       **masses: np.ndarray**
           data array (mz, annotation)

       **mean_spectrum: np.ndarray**
           average intensity values for the species














   ..
       !! processed by numpydoc !!


.. function:: add_table(worksheet, masses, image)

   Add statistics table to a spreadsheet


   :Parameters:

       **worksheet: xlsxwriter.Worksheet**
           current worksheet

       **masses: np.ndarray**
           data array (mz, annotation)

       **image: np.ndarray**
           MALDI image datacube














   ..
       !! processed by numpydoc !!


.. function:: insertable_image(image, size)

   Converts an image to binary
   for insertion inside a spreadsheet


   :Parameters:

       **image: np.ndarray**
           numpy image

       **size: tuple**
           new size

   :Returns:

       BytesIO
           insertable image













   ..
       !! processed by numpydoc !!


.. function:: add_images(worksheet, column_names, masses, image)

   Add images in spreadsheet


   :Parameters:

       **worksheet: xlsxwriter.Worksheet**
           spreadsheet

       **column_names: list**
           column header names

       **masses: np.ndarray**
           data: mz and annotation

       **image: np.ndarray**
           MALDI image datacube














   ..
       !! processed by numpydoc !!


.. function:: add_reduction(worksheet, reduction_dir)

   Add dimension reduction analysis
   in a spreadsheet


   :Parameters:

       **worksheet: xlsxwriter.Worksheet**
           spreadsheet

       **reduction_dir: str**
           directory containing dimension reduction results














   ..
       !! processed by numpydoc !!


.. function:: gradient(n, start, end)

   Gray-level gradient (hexadecimal)


   :Parameters:

       **n:  int**
           number of colors

       **start: int**
           starting gray level

       **end: int**
           end gray level

   :Returns:

       list
           graient list













   ..
       !! processed by numpydoc !!


.. data:: parser
   

   

.. data:: args
   

   

.. data:: annotation_name
   

   

.. data:: input_name
   

   

.. data:: mzs_name
   

   

.. data:: output_name
   

   

.. data:: reduction_dir
   

   

.. data:: imzml
   

   

.. data:: spectra
   

   

.. data:: image
   

   

.. data:: number_samples
   

   

.. data:: number_replicates
   

   

.. data:: masses
   

   

.. data:: reader
   

   

.. data:: has_headers
   

   

.. data:: k
   

   

.. data:: max_len
   

   

.. data:: column_names
   

   

.. data:: mean_spectrum
   

   

.. data:: masses_curated
   

   

.. data:: mean_spectrum_curated
   :annotation: = []

   

.. data:: index
   :annotation: = 0

   

.. data:: mean_spectrum_curated
   

   

.. data:: workbook
   

   

.. data:: header_format
   

   

.. data:: left_format
   

   

.. data:: worksheet
   

   

.. data:: worksheet2
   

   

.. data:: worksheet3
   

   

.. data:: worksheet4
   

   

.. data:: worksheet5
   

   

