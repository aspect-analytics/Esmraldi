:mod:`esmraldi.fusion`
======================

.. py:module:: esmraldi.fusion

.. autoapi-nested-parse::

   Module for the joint statistical
   analysis of images

   ..
       !! processed by numpydoc !!



Module Contents
---------------


.. function:: clustering_affinity(X_r)

   Clustering by affinity propagation
   Based on scikit module


   :Parameters:

       **X_r: np.ndarray**
           fitted data (e.g. by PCA)

   :Returns:

       np.ndarray
           clustered data













   ..
       !! processed by numpydoc !!


.. function:: clustering_kmeans(X_r)

   Clustering by kmeans
   Based on scikit module


   :Parameters:

       **X_r: np.ndarray**
           fitted data (e.g. by PCA)

   :Returns:

       np.ndarray
           clustered data













   ..
       !! processed by numpydoc !!


.. function:: pca(image, n=5)

   Performs PCA on image array
   Each image is represented as a point after fitting
   Based on scikit module


   :Parameters:

       **image: np.ndarray**
           collection of images

       **n: int**
           number of components

   :Returns:

       sklearn.decomposition.PCA
           pca object













   ..
       !! processed by numpydoc !!


.. function:: nmf(image, n=5)

   Performs PCA on image array
   Each image is represented as a point after fitting
   Based on scikit module


   :Parameters:

       **image: np.ndarray**
           collection of images

       **n: int**
           number of components

   :Returns:

       sklearn.decomposition.NMF
           nmf object













   ..
       !! processed by numpydoc !!


.. function:: post_processing(pca_maldi, pca_mri)

   Computes t-SNE from dimension reduction data
   Based on scikit module


   :Parameters:

       **pca_maldi: np.ndarray**
           PCA coordinates for the MALDI images

       **pca_mri: np.ndarray**
           PCA coordinates for the MRI image

   :Returns:

       np.ndarray
           tSNE coordinates for MALDI

       np.ndarray
           tSNE coordinates for MRI













   ..
       !! processed by numpydoc !!


.. function:: weighted_distance(X, weights)

   Weighted euclidean distance
   for similarity measure


   :Parameters:

       **X: np.ndarray**
           coordinates

       **weights: list**
           weights for each coordinate














   ..
       !! processed by numpydoc !!


.. function:: select_images(images, point_mri, centers, weights, mzs, labels, top=1)

   Sort the (MALDI) images according to their proximity to
   the MRI image


   :Parameters:

       **images: np.ndarray**
           MALDI images

       **centers: np.ndarray**
           MALDI images (reduced)

       **point_mri: np.ndarray**
           MRI image (reduced)

       **weights: list**
           weights for each coordinate

       **mzs: list**
           m/z ratios

       **labels: np.ndarray**
           clustering labels (optional)

       **top: int**
           number of images to extract

   :Returns:

       np.ndarray
           sorted MALDI images based on proximity to MRI

       np.ndarray
           sorted mzs based on proximity to MRI

       np.ndarray
           metric values used to sort MALDI













   ..
       !! processed by numpydoc !!


.. function:: extract_ratio_images(image, mzs)

   Extracts ratio images : image_n / image_{n-x}, x > 0
   Computing (n**2-n)/2 images


   :Parameters:

       **image: np.ndarray**
           array of input images

       **mzs: list**
           associated labels (e.g. m/z ratios)














   ..
       !! processed by numpydoc !!


