:mod:`quantify_realignment`
===========================

.. py:module:: quantify_realignment

.. autoapi-nested-parse::

   Quantify realignement of spectra
   with various measures

   ..
       !! processed by numpydoc !!



Module Contents
---------------


.. function:: complete_sum(spectra)

   Intensity sum
   across all spectra


   :Parameters:

       **spectra: np.ndarray**
           spectra

   :Returns:

       float
           intensity sum













   ..
       !! processed by numpydoc !!


.. function:: full_ratio(reduced, full)

   Measure of lost information
   between reduced spectra and full
   spectra


   :Parameters:

       **reduced: float**
           measure on reduced spectra

       **full: float**
           measure on full spectra

   :Returns:

       float
           ratio













   ..
       !! processed by numpydoc !!


.. function:: estimate_noise_ratio(spectra)

   Estimates the SNR
   in MALDI spectra


   :Parameters:

       **spectra: np.ndarray**
           spectra

   :Returns:

       tuple
           noise level, signal median













   ..
       !! processed by numpydoc !!


.. function:: estimate_noise_proportion(y, median, sigma)

   Proportion of points in a spectrum
   that are considered noise
   that is to say their intensity
   is lower than signal median + noise


   :Parameters:

       **y: list**
           intensities

       **median: float**
           signal median

       **sigma: float**
           noise level














   ..
       !! processed by numpydoc !!


.. function:: distance_indices(indices1, indices2)

   Distances between closest indices in
   two lists


   :Parameters:

       **indices1: np.ndarray**
           first list of indices

       **indices2: np.ndarray**
           second list of indices

   :Returns:

       list
           lowest distances between indices













   ..
       !! processed by numpydoc !!


.. function:: realign_close_peaks(array1, array2)

   Get a list of close peaks in two arrays


   :Parameters:

       **array1: np.ndarray**
           first array

       **array2: np.ndarray**
           second array

   :Returns:

       list
           close peaks













   ..
       !! processed by numpydoc !!


.. function:: precision(array1, array2)

   Precision : |a1 \cap a2|/|a2|


   :Parameters:

       **array1: np.ndarray**
           first array

       **array2: np.ndarray**
           second array

   :Returns:

       float
           precision













   ..
       !! processed by numpydoc !!


.. function:: recall(array1, array2)

   Recall : |a1 \cap a2|/|a1|


   :Parameters:

       **array1: np.ndarray**
           first array

       **array2: np.ndarray**
           second array

   :Returns:

       float
           recall













   ..
       !! processed by numpydoc !!


.. function:: missing_indices(array1, array2)

   Set difference between array2 and array1


   :Parameters:

       **array1: np.ndarray**
           first array

       **array2: np.ndarray**
           second array

   :Returns:

       list
           set difference













   ..
       !! processed by numpydoc !!


.. function:: extract_indices_from_mz(mzs, x)

   From a list of mzs, extract
   corresponding indices in x


   :Parameters:

       **mzs: np.ndarray**
           reference mass to charge list

       **x: list**
           observed mass to charge list

   :Returns:

       list
           indices of x associated to mzs













   ..
       !! processed by numpydoc !!


.. data:: averagine
   

   

.. data:: realigned_spectra
   

   

.. data:: realigned_spectra
   

   

.. data:: sum_realigned
   

   

.. data:: full_spectra
   

   

.. data:: indices_realigned
   

   

.. data:: distance_between_mz
   

   

.. data:: prominence
   :annotation: = 50

   

.. data:: indices_full_spectra
   

   

.. data:: unique_indices
   

   

.. data:: spectra_max_before
   

   

.. data:: indices_spectra_max
   

   

.. data:: ui_realigned
   

   

.. data:: ism_realigned
   

   

.. data:: p
   

   

.. data:: r
   

   

.. data:: missing
   

   

.. data:: peaks_missing
   

   

.. data:: sum_full
   

   

.. data:: noise_proportion
   

   

.. data:: r
   

   

